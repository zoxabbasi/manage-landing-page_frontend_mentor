:root {
  --clr-accent-500: hsl(12, 60%, 45%);
  --clr-accent-400: hsl(12, 88%, 59%);
  --clr-accent-300: hsl(12, 88%, 75%);
  --clr-accent-100: hsl(13, 100%, 96%);

  --clr-primary-400: hsl(228, 39%, 23%);

  --clr-neutral-900: hsl(232, 12%, 13%);
  --clr-neutral-200: hsl(0 0% 97%);
  --clr-neutral-100: hsl(0 0% 100%);

  --ff-primary: "Be Vietnam Pro", sans-serif;

  --ff-body: var(--ff-primary);
  --ff-heading: var(--ff-primary);

  --fw-regular: 400;
  --fw-semi-bold: 500;
  --fw-bold: 700;

  --fs-300: 0.8125rem;
  --fs-400: 0.875rem;
  --fs-500: 0.9375rem;
  --fs-600: 1rem;
  --fs-700: 1.875rem;
  --fs-800: 2.5rem;
  --fs-900: 3.5rem;

  --fs-body: var(--fs-400);
  --fs-primary-heading: var(--fs-800);
  --fs-secondary-heading: var(--fs-700);
  --fs-nav: var(--fs-500);
  --fs-button: var(--fs-300);

  --size-100: 0.25rem;
  --size-200: 0.5rem;
  --size-300: 0.75rem;
  --size-400: 1rem;
  --size-500: 1.5rem;
  --size-600: 2rem;
  --size-700: 3rem;
  --size-800: 4rem;
  --size-900: 5rem;
}

@media (min-width: 50em) {
  :root {
    --fs-body: var(--fs-500);
    --fs-primary-heading: var(--fs-900);
    --fs-secondary-heading: var(--fs-800);

    --fs-nav: var(--fs-300);
  }
}

/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
* {
  margin: 0;
  padding: 0;

  /* It resets the font sizes of all the html h1, h2, h3 elements */
  font: inherit;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role="list"],
ol[role="list"] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

html,
body {
  height: 100%;
}

/* Set core body defaults */
body {
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture,
svg {
  max-width: 100%;
  display: block;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* General styling */
body {
  font-size: var(--fs-body);
  font-family: var(--ff-body);
  color: var(--clr-primary-400);
}

p:not([class]) {
  /* p:not([class]) means if I did other things with it like changed the color, I probably  want the color
  to stick and not the opacity to drop down  */
  opacity: 0.7;
  max-width: 32ch;
  /* Setting actual width will lock it in where as max-width means don't get smaller than that */
}

p[data-width="wide"] {
  max-width: 100%;
}

/* Button */
.button {
  display: inline-flex;
  /* We want to push the button to the right, but as it is an inline element margin-left won't work on it */
  cursor: pointer;
  text-decoration: none;
  border: 0;
  border-radius: 100vmax;
  padding: 1.25em 2.5em;
  line-height: 1;
  /* It helps to center things often but you will need to increase the padding */
  font-weight: var(--fw-bold);
  font-size: var(--fs-button);
  color: var(--clr-neutral-100);
  background-color: var(--clr-accent-400);
  box-shadow: 0 1em 1em -1em var(--clr-accent-500);
  display: inline-block
    /* box-shadow: h-offset v-offset blue spread color */
}

.button[data-type="inverted"] {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-400);
}

.button:hover,
.button:focus-visible {
  /* So that if we click on it, it doesn't get the focus state */
  background-color: var(--clr-accent-300);
}

.button[data-type="inverted"]:hover,
.button[data-type="inverted"]:focus-visible {
  background-color: var(--clr-neutral-100);
  color: var(--clr-accent-300);
}

/* Navigation */

.primary-header {
  padding-top: var(--size-700);
}

.nav-wrapper {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.mobile-nav-toggle {
  display: none;
}

.nav-list {
  font-size: var(--fs-nav);
}

.nav-list {
  display: flex;
  gap: clamp(var(--size-400), 5vw, var(--size-700));
  font-weight: var(--fw-semi-bold);
}

.nav-list a {
  color: var(--clr-primary-400);
  text-decoration: none;
}

.nav-list a:hover,
.nav-list a:focus {
  color: var(--clr-accent-400);
}

@media (max-width: 50rem) {
  .primary-navigation {
    display: none;
    /* This will turn off automatically */

    position: fixed;
    padding: var(--size-700);
    inset: 7rem var(--size-400) auto;
    max-width: 25rem;
    margin-left: auto;
    background: var(--clr-neutral-100);
    border-radius: var(--size-100);
    box-shadow: 0 0 0.75em rgb(0, 0, 0, 0.05);
  }

  .primary-header[data-overlay]::before {
    content: '';
    position: fixed;
    inset: 0;
    background-image: linear-gradient(rgb(0 0 0 / 0), rgb(0 0 0 / 0.5));
  }

  .nav-list {
    display: grid;
    gap: var(--size-600);
    text-align: center;
    font-weight: var(--fw-bold);
  }

  .primary-navigation[data-visible] {
    display: block;
  }

  .mobile-nav-toggle {
    display: block;
    position: fixed;
    top: var(--size-600);
    right: var(--size-400);
    cursor: pointer;
    background: transparent;
    border: 0;
    padding: 0.5rem;
  }

  .mobile-nav-toggle .icon-close {
    display: none;
  }
}

/* Footer */
.primary-footer {
  --logo-color: var(--clr-neutral-100);
}

/* 
.primary-footer > * > * > *{
  outline: 2px solid red;
}
To check what I'm working on*/
.primary-footer-wrapper {
  display: grid;
  gap: var(--size-700);
  grid-template-areas:
    'form'
    'nav'
    'logo-social';
}


.primary-footer-logo-social {
  grid-area: logo-social;

  display: flex;
  flex-direction: column-reverse;
  align-items: center;
  gap: var(--size-800)
}

.primary-footer-nav {
  grid-area: nav;
}

.primary-footer-form {
  grid-area: form;
}

@media (min-width: 50em) {
  .primary-footer-wrapper {
    grid-template-areas:
      'logo-social nav form';
  }

  .primary-footer-logo-social{
    align-items: flex-start;
    flex-direction: column;
    justify-content: space-between;
    gap: var(--size-800)
  }
}

@media (max-width: 50em) {
  .primary-footer-wrapper>* {
    margin-inline: auto;
  }
}

/* Footer nav */
.footer-nav {
  columns: 2;
  gap: max(30vw, 2rem);
}

.footer-nav a {
  color: var(--clr-neutral-100);
  text-decoration: none;
}

.footer-nav a:is(:hover, :focus) {
  color: var(--clr-accent-400);
}

/* Social list */
.social-list {
  display: flex;
  gap: var(--size-600);
}

.social-icon {
  width: var(--size-600);
  aspect-ratio: 1;
  fill: var(--clr-neutral-100)
    /* removed the fill property from the svg and adding it using CSS */
}

.social-list a:where(:hover, :focus) .social-icon {
  fill: var(--clr-accent-400)
}

@media(min-width: 50em) {
  .social-list {
    gap: var(--size-300);
  }

  .social-icon {
    width: var(--size-500);
  }
}


/* cta */
.cta {
  position: relative;
  isolation: isolate;
  text-align: center;
}

@media(min-width: 50em) {
  .cta {
    text-align: left;
  }
}

.cta::before {
  content: '';
  position: absolute;
  z-index: -1;
  /* This will push the element to the back, to counter this we use isolation property with isolate
   which prevents it from going behind that element, creates stacking context  */
  inset: 0;
  background-image: url("images/bg-tablet-pattern.svg"),
    url("images/bg-tablet-pattern.svg");
  background-position: -15rem -5rem, 80rem -42rem;
  background-repeat: no-repeat;
  opacity: .1;
}

.opened {
  display: block;
  position: fixed;
}

/* General Styling */
.visually-hidden {
  position: absolute;
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

.container {
  --max-width: 1110px;
  --padding: 1rem;
  /* Locally scoped custom properties */

  width: min(var(--max-width), 100% - (var(--padding) * 2));
  /* min() will choose the smaller of whatever value we have */
  /* and then subtracting var(--padding) will push the contents away from the side by 1rem */
  /* and the * 2 will make the padding 2 rem */
  /* So, we have 2rem of padding on each sides and margin-inline-auto is keep it in the center */

  margin-inline: auto;
  /* Margin inline is your left or right or both margins  */
}

.even-columns {
  display: grid;
  gap: 1rem;
}

@media (min-width: 50em) {
  /* This size will takeover when the screen is more than 50em unit */

  .even-columns {
    grid-auto-flow: column;
    /* So that the next generated content will fit itself in the column */

    grid-auto-columns: 1fr;
    /* So that all the columns are of equal width */
  }
}

.justify-self-end {
  justify-self: end;
  /* As the button is in a grid, this is the only way to push it to the right */
}

@media(min-width: 50em) {
  .justify-self-end-md {
    justify-self: end
  }
}

.vertical-align-center {
  align-items: center;
}

:where(.flow >:not(:first-child)) {
  /* :where has zero specificy, if we had used :not without :where then we cannot change the style
  as it has higher specificy */
  margin-top: var(--flow-spacer, 3em);
  /* The var will choose either --flow-spacer or the default value */
}

/* General Styling */
.text-primary-400 {
  color: var(--clr-primary-400);
}

.text-accent-400 {
  color: var(--clr-accent-400);
}

.text-accent-100 {
  color: var(--clr-accent-100);
}

.text-neutral-100 {
  color: var(--clr-neutral-100);
}

.text-neutral-900 {
  color: var(--clr-neutral-900);
}

.bg-primary-400 {
  background-color: var(--clr-primary-400);
}

.bg-accent-400 {
  background-color: var(--clr-accent-400);
}

.bg-accent-100 {
  background-color: var(--clr-accent-100);
}

.bg-neutral-100 {
  background-color: var(--clr-neutral-100);
}

.bg-neutral-900 {
  background-color: var(--clr-neutral-900);
}

.fw-bold {
  font-weight: var(--fw-bold);
}

.fw-semi-bold {
  font-weight: var(--fw-semi-bold);
}

.fw-regular {
  font-weight: var(--fw-regular);
}

.fs-primary-heading {
  font-size: var(--fs-primary-heading);
  line-height: 1.1;
  /* Line height needs to be brought down with larger fonts */
}

.fs-secondary-heading {
  font-size: var(--fs-secondary-heading);
  line-height: 1.1;
}

.fs-300 {
  font-size: var(--fs-300);
}

.fs-400 {
  font-size: var(--fs-400);
}

.fs-500 {
  font-size: var(--fs-500);
}

.fs-600 {
  font-size: var(--fs-600);
}

.padding-block-900 {
  padding-block: var(--size-900);
}

.padding-block-700 {
  padding-block: var(--size-700);
}

.display-sm-none {
  display: none;
}

@media(min-width: 50em) {
  .display-md-inline-flex {
    display: inline-flex
  }
}